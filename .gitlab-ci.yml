image: docker:stable

services:
  - docker:dind

stages:
  - build images
  - release images
  - build
  - run
  - tests

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  LOCAL_IMAGE: registry.gitlab.com/mog33/docker-compose-drupal
  RELEASE_REGISTRY: docker.io
  RELEASE_IMAGE: index.docker.io/$RELEASE_USER

################################################################################
# Templates to avoid repeat.
# https://docs.gitlab.com/ee/ci/yaml/#anchors
################################################################################

.docker_login_gitlab:
  - &docker_login_gitlab docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com

.docker_build_push:
  script: &docker_build_push
    - docker build --pull --tag $LOCAL_IMAGE/$IMAGE $DIR
    - docker push $LOCAL_IMAGE/$IMAGE

.docker_pull:
  - &docker_pull docker pull $LOCAL_IMAGE/$IMAGE

.build_image: &build_image
  stage: build images
  before_script:
    - *docker_login_gitlab
  script: *docker_build_push

.release: &release
  stage: release images
  before_script:
    - docker login -u $RELEASE_USER -p $RELEASE_PASSWORD $RELEASE_REGISTRY
  script:
    - *docker_pull
    - docker tag $LOCAL_IMAGE/$IMAGE $RELEASE_IMAGE/$IMAGE
    - docker push $RELEASE_IMAGE/$IMAGE
  only:
    - master

.install_docker_compose:
    - &install_docker_compose
      apk --no-cache add make gettext bash python3 > /dev/null &&
      python3 -m ensurepip > /dev/null &&
      pip3 install --upgrade pip setuptools > /dev/null &&
      if [ ! -e /usr/bin/pip ]; then ln -s pip3 /usr/bin/pip; fi &&
      if [[ ! -e /usr/bin/python ]]; then ln -sf /usr/bin/python3 /usr/bin/python; fi &&
      pip install 'docker-compose' > /dev/null

.reset_drupal:
    - &reset_drupal
      rm -f drupal/web/sites/default/settings.php &&
      cp drupal/web/sites/default/default.settings.php drupal/web/sites/default/settings.php &&
      chmod 777 drupal/web/sites/default/settings.php

.test_run: &test_run
  stage: run
  script:
    - docker-compose build &> /dev/null
    - chmod -R 600 config/mysql
    - docker-compose up -d
    - docker-compose ps
    - sleep 5s && docker-compose logs
    - docker exec dcd-php php -v

.test_install: &test_install
  stage: tests
  script:
    - chmod -R 600 config/mysql
    - docker-compose up -d --build &> /dev/null
    - apk --no-cache add git
    - scripts/get-tools.sh install
    - scripts/get-tools.sh update
    - scripts/composer
    - scripts/install-drupal.sh
    #- scripts/drush status
    #- scripts/mysql test
    #- scripts/pgsql test

################################################################################
# Jobs based on previous templates.
################################################################################

dashboard:
  <<: *build_image
  variables:
    IMAGE: dashboard:latest
    DIR: build/dashboard

release:dashboard:
  <<: *release
  variables:
    IMAGE: dashboard:latest

build:
  stage: build
  before_script:
    - *install_docker_compose
  script:
    - make setup
    - docker-compose config

run:
  before_script:
    - *install_docker_compose
    - make setup
  <<: *test_run

.run basic:
  before_script:
    - *install_docker_compose
    - make setup
    - cp samples/apache_mysql_php.yml docker-compose.yml
  <<: *test_run

.run advanced:
  before_script:
    - *install_docker_compose
    - make setup
    - cp samples/apache_mysql_php_memcache_solr.yml docker-compose.yml
  <<: *test_run

.run AP9P:
  before_script:
    - *install_docker_compose
    - make setup
    - cp samples/apache_postgres9_php.yml docker-compose.yml
  <<: *test_run

tests:
  before_script:
    - *install_docker_compose
    - make setup
  <<: *test_install
