#!/usr/bin/env bash
#
# Helper to run mysql dump/restore with DockerComposeDrupal.
#
# Usage:
#   mysql dump | restore
#
# Depends on:
#  docker
#  DockerComposeDrupal
#
# Bash Boilerplate: https://github.com/alphabetum/bash-boilerplate
# Bash Boilerplate: Copyright (c) 2015 William Melody • hi@williammelody.com

_SOURCE="${BASH_SOURCE[0]}"
while [ -h "$_SOURCE" ]; do # resolve $_SOURCE until the file is no longer a symlink
  _DIR="$( cd -P "$( dirname "$_SOURCE" )" && pwd )"
  _SOURCE="$(readlink "$_SOURCE")"
  [[ $_SOURCE != /* ]] && _SOURCE="$_DIR/$_SOURCE" # if $_SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
_DIR="$( cd -P "$( dirname "$_SOURCE" )" && pwd )"

if [ ! -f $_DIR/helpers/common.sh ]; then
  printf "[ERROR] Missing helpers/common.sh file.\\n"
  exit 1
fi

source $_DIR/helpers/common.sh

###############################################################################
# Help
###############################################################################

# _print_help()
#
# Usage:
#   _print_help
#
# Print the program help information.
_print_help() {
  _help_logo
  cat <<HEREDOC

Helper to dump, drop and restore MYSQL/MariaDB.

Usage:
  ${_ME} [ (import | restore) ] [ (optional) Dump filename ]
  ${_ME} [ (dump | backup) | dump-no-drush | drop | create ]
  ${_ME} list | l
    List all available dumps.

'dump' and 'drop' is performed with Drush, dump ignore common cache, search,
stats and sessions tables from Drupal.
'dump' append the current timestamp.

'dump-no-drush' use mysql client and do not ignore data in Drupal temporary
tables like watchdog, cache*...

'drop-no-drush' use mysql native client to completly DROP the database.

'create' use mysql client to create and grant a database DB_NAME, default to 'drupal'.

dumps are located in the ./dump folder of Docker compose Drupal.

Options:
  -h --help         Show this screen.
HEREDOC
}

###############################################################################
# Program Functions
###############################################################################

_create() {
  _mysql_exec 'exec mysql -uroot -p$MYSQL_ROOT_PASSWORD -e "CREATE DATABASE IF NOT EXISTS "'"$_DB_NAME"'" CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;"'

  _GRANT="GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, INDEX, ALTER, CREATE TEMPORARY TABLES ON $_DB_NAME.* TO '$MYSQL_USER'@'%';"
  echo $_GRANT > tmp_grant.sql
  $_DOCKER cp tmp_grant.sql "${PROJECT_CONTAINER_MYSQL}":/tmp/tmp_grant.sql
  _mysql_exec 'exec mysql -uroot -p$MYSQL_ROOT_PASSWORD < /tmp/tmp_grant.sql'
  rm -f tmp_grant.sql
}

_drop() {
  _mysql_exec 'exec mysql -uroot -p$MYSQL_ROOT_PASSWORD -e "DROP DATABASE IF EXISTS "'"$_DB_NAME"''
}

_drop_drush() {
  _docker_exec_noi \
    "${DRUSH_BIN}" -r "${DRUPAL_DOCROOT}" -y sql-drop
}

_dump_drush() {
  _docker_exec_noi \
    "${DRUSH_BIN}" -r "${DRUPAL_DOCROOT}" sql-dump \
      --structure-tables-list=cache*,history,node_counter,search_*,sessions,watchdog \
      --result-file="/dump/${_DUMP_FILE}"
}

_dump() {
  _mysql_exec 'exec mysqldump -u$MYSQL_USER -p$MYSQL_PASSWORD $MYSQL_DATABASE > /docker-entrypoint-initdb.d/'"$_DUMP_FILE"''
  printf "Database dump saved to %s\\n" ${DUMP_FOLDER}/${_DUMP_FILE}
}

_restore() {
  if [ -z "$_DUMP_FILE" ]; then
    _select_dump
  fi
  if ! [ -f "${DUMP_FOLDER}/${_DUMP_FILE}" ]; then
    printf "File not found: %s\\n" "${DUMP_FOLDER}/${_DUMP_FILE}"
    _select_dump
  fi

  printf "Restoring %s...\\n" $_DUMP_FILE
  _drop
  _create
  _mysql_exec 'exec mysql -u$MYSQL_USER -p$MYSQL_PASSWORD $MYSQL_DATABASE < /docker-entrypoint-initdb.d/'"$_DUMP_FILE"''

  printf "... Done!\n"
}

_list_dump() {
  printf "Available dump files:\\n"
  __list=$(ls -lAh "${DUMP_FOLDER}")
  printf "%s\\n" "$__list"
}

_select_dump() {

  _DUMPS=$(ls "${DUMP_FOLDER}")
  _DUMPS=(`echo $_DUMPS | sed 's/ /\n/g'`)

  printf "Select a dump file:\\n"
  select opt in "Cancel" "${_DUMPS[@]}"; do
    case $opt in
      *.sql)
        _DUMP_FILE=$opt
        break
        ;;
      "Cancel")
        die "You chose to cancel"
        _DUMP_FILE=""
        break
        ;;
      *)
        echo "This is not a number or wrong selection/file format"
        ;;
    esac
  done
}

_mysql_exec() {
  $_DOCKER exec \
    "${PROJECT_CONTAINER_MYSQL}" \
      sh -c $@
}

_ensure_dump_dir() {
  if [[ ! -d ${DUMP_FOLDER} ]]
  then
    mkdir -p ${DUMP_FOLDER}
  fi
  _mysql_exec 'mkdir -p "'"$DUMP_FOLDER_IMAGE"'"'
  _mysql_exec 'chown -R mysql:mysql "'"$DUMP_FOLDER_IMAGE"'"'
  _mysql_exec 'chmod -R 777 "'"$DUMP_FOLDER_IMAGE"'"'
}

_set_dump_file() {
  if [ -z ${_DUMP_FILE} ]; then
    _DUMP_FILE=dump_${_NOW}.sql
  fi
}

_tests() {
  _DUMP_FILE=dump_test_no_drush.sql
  _dump
  if [ -f ${DUMP_FOLDER}/${_DUMP_FILE} ]; then
    echo "... Dump success!"
  fi
  _restore
  _list_dump
}

_tests_with_drush() {
  if ! [ -f ${STACK_DRUPAL_ROOT}/vendor/drush/drush/drush ]; then
    echo "[Warning] Could not find Drush, tests skipped, did you install Drupal 8 with Drush?"
  fi
  _DUMP_FILE=dump_test_drush.sql
  _dump_drush
  _restore
  _list_dump
  _drop_drush
}

###############################################################################
# Main
###############################################################################

# _main()
#
# Usage:
#   _main [<options>] [<arguments>]
#
# Description:
#   Entry point for the program, handling basic option parsing and dispatching.
_main() {

  _set_container_mysql
  _ensure_dump_dir
  _DB_NAME=$MYSQL_DATABASE
  _DUMP_FILE=${2:-}

  if [[ "${1:-}" =~ ^list$ ]] || [[ "${1:-}" =~ ^l$ ]];  then
    _list_dump
  elif [[ "${1:-}" =~ ^dump-no-drush$ ]]; then
    _set_dump_file
    _dump
  elif [[ "${1:-}" =~ ^dump$ ]] || [[ "${1:-}" =~ ^backup$ ]]; then
    _set_dump_file
    _dump_drush
  elif [[ "${1:-}" =~ ^restore$ ]] || [[ "${1:-}" =~ ^import$ ]]; then
    _set_dump_file
    _restore
  elif [[ "${1:-}" =~ ^drop-no-drush$ ]]; then
    _drop ${2:-}
  elif [[ "${1:-}" =~ ^drop$ ]]; then
    _drop_drush
  elif [[ "${1:-}" =~ ^create$ ]]; then
    _create ${2:-}
  elif [[ "${1:-}" =~ ^test$ ]]; then
    _tests
    _tests_with_drush
  else
    _print_help
  fi
}

# Call `_main` after everything has been defined.
_main "$@"
